/*This is the Turtle class. It controls the movement of the turtle. The turtle is told how to move by the class 
DrawLSystem, which reads the instructions from the pattern generated by the method pattern in the class LSystem*/

package com.gnyrfta.lsystems;

import java.lang.Math;
import java.util.*;

public class Turtle {

public static int direction;//angle in degrees. 0 degrees is to the right, as in the unity circle.The way the turtle faces.
public static int stepLength;
public static int x;//x-coordinate
public static int y;//y-coordinate
public static int movementX;//How far we are going to move in X and Y direction
public static int movementY;

public static ArrayList <Integer> storedX = new ArrayList <Integer>();
public static ArrayList <Integer> storedY = new ArrayList <Integer>();
public static ArrayList <Integer> storedDirection = new ArrayList <Integer>();

private static double movementXD;//How far we are going to move as a double value.
private static double movementYD;
private static double directionRadians;
private static double stepLengthd;
final private static double degToRad = Math.PI/180; //Converts degrees to radians.


	public static void move(){
			stepLengthd=stepLength;
			directionRadians = direction*degToRad;
			movementXD=stepLengthd*(Math.cos(directionRadians));
			movementYD=stepLengthd*(Math.sin(directionRadians));
			movementX=(int)movementXD;
			movementY=(int)movementYD;
			x=x+movementX;
			y=y+movementY;
	}
	
	public static void pushDownState() {//stores current x and y -coordinates.
		storedX.add(x);
		storedY.add(y);
		storedDirection.add(direction);
	}
	public static void popUpState() {//goes back to the last stored x or y-coordinates.
		int i = storedX.size();
		x = storedX.get(i-1);
		y = storedY.get(i-1);
		direction = storedDirection.get(i-1);
		storedX.remove(i-1);
		storedY.remove(i-1);
		storedDirection.remove(i-1);
	}
}
